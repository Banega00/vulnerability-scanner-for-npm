import { Command } from 'commander';
import fs from 'fs';
import figlet from 'figlet';
import axios from 'axios';

type CommandOptions = {
    file?: string;
    verbose?: boolean;
}

(async () => {


    console.log(figlet.textSync("Vulnerability Scanner"));

    const program = new Command();

    program
        .version('1.0.0')
        .description('A simple CLI tool')
        .option('-f, --file <filename>', 'Specify a file')
        .option('-v, --verbose', 'Enable verbose mode')
        .parse(process.argv);

    const options = program.opts<CommandOptions>();


    const currentDirectory = process.cwd();

    try{
        const packageJSONExists = fs.existsSync(`${currentDirectory}/package.json`);

        if(!packageJSONExists){
            throw Error('Package json is not found in the current directory');
        }

        const packageJSONData = fs.readFileSync(`${currentDirectory}/package.json`, 'utf8');

        let packageJSONParsedData;

        try{
            packageJSONParsedData = JSON.parse(packageJSONData);
        }catch(error){
            throw Error('Package json is not valid');
        }

        let dependencies = packageJSONParsedData.dependencies;

        if(!dependencies){
            throw Error('Missing dependencies in package json');
        }

        const response = await axios.get('https://api.github.com/advisories', { method: 'POST', 
            headers: {
                'Content-Type': 'application/vnd.github+json'
            },
            params:{
                ecosystem: 'npm',
                affects: 'jsonwebtoken@8.5.1'
            }
        });
        const data = await response.data;

        console.log(data)

    }catch(error){
        if(error instanceof Error){
            console.log(error.message);
        }
        return;
    }
})();

// async function vulnerabilityCheck =

